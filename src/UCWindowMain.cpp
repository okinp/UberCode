#include "UCWindowMain.h"
#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <QtGui/QButtonGroup>
#include <QtGui/QDockWidget>
#include <QtGui/QHBoxLayout>
#include <QtGui/QHeaderView>
#include <QtGui/QMainWindow>
#include <QtGui/QMenu>
#include <QtGui/QMenuBar>
#include <QtGui/QWidget>
#include <QtGui/QMessageBox>
#include <QtGui/QGraphicsView>

#include <ui_MainWindow.h>
#include "UCDialogPathBundles.h"
#include "UCManagerBundles.h"
#include "UCTreeWidgetBundles.h"
#include "UCSceneView.h"
#include "UCTreeWidgetBlockProperties.h"


using namespace Uber;


UCWindowMain::UCWindowMain(void)
	: QMainWindow()
{
	// Creating UI through class generated by *.ui files
	m_UIWindow = Ui_MainWindow_sp( new Ui_MainWindow() );
	m_UIWindow->setupUi( this );

	// insert tree widget at the dock
	m_UIWindow->dockLLayout->addWidget( new UCTreeWidgetBundles( this ) );

	UCSceneView& sceneView = UCSceneView::GetInstance();
	sceneView.SetRootGraphicsView( m_UIWindow->sceneView );
	m_UIWindow->sceneView->setScene( &sceneView );

	m_UIWindow->dockRLayout->addWidget( &UCTreeWidgetBlockProperties::GetInstance() );
	// Connect UI-actions to this class slots
	ConnectActions();

	// connect to view to detect changes
	//connect( //view to draw?!, SIGNAL( contentsChanged() ) ), this, SLOT(DocumentModified() ) );
	UCManagerBundles::GetInstance().LoadBundles();
}

UCWindowMain::~UCWindowMain(void)
{

}

void Uber::UCWindowMain::OnNewScene()
{
	QMessageBox::about(	this,
		tr( "Not Implemented" ),
		tr( "N/A" ) );
}

void Uber::UCWindowMain::OnLoadScene()
{
	QMessageBox::about(	this,
		tr( "Not Implemented" ),
		tr( "N/A" ) );
}

void Uber::UCWindowMain::OnSaveScene()
{
	QMessageBox::about(	this,
		tr( "Not Implemented" ),
		tr( "N/A" ) );
}

void Uber::UCWindowMain::OnDocumentModified()
{
	// what happens if content got modified? close -> ask to save scene?
}

void Uber::UCWindowMain::OnShowAbout()
{
	QMessageBox::about(	this,
						tr( "About Application" ),
						tr( "About" ) );
}

void Uber::UCWindowMain::ConnectActions()
{
	connect( m_UIWindow->actionNew, SIGNAL( triggered() ), this, SLOT( OnNewScene() ) );
	connect( m_UIWindow->actionOpen, SIGNAL( triggered() ), this, SLOT( OnLoadScene() ) );
	connect( m_UIWindow->actionSave, SIGNAL( triggered() ), this, SLOT( OnSaveScene() ) );
	connect( m_UIWindow->actionAbout, SIGNAL( triggered() ), this, SLOT( OnShowAbout() ) );
	connect( m_UIWindow->actionPathBundles, SIGNAL( triggered() ), this, SLOT( OnShowSettingsPathBundles() ) );
	connect( m_UIWindow->btn_dockRefreshBundles, SIGNAL( clicked() ), this, SLOT( OnBundleRefresh() ) );
}

void Uber::UCWindowMain::OnShowSettingsPathBundles()
{
	m_UIDialogSettingBundlePath = UCDialogPathBundles_sp( new UCDialogPathBundles() );
	m_UIDialogSettingBundlePath->show();
}

void Uber::UCWindowMain::OnBundleRefresh()
{
	UCManagerBundles::GetInstance().LoadBundles();
}

