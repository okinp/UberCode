#pragma once
#include <QtGui/QDialog>
#include <QtGui/QListWidget>
#include <QSharedPointer>
#include <QObject>


class Ui_SettingsPathBundles;
class QToolButton;
class QLineEdit;
class QListWidget;

namespace Uber
{
	

/*!
* This Class contains the UI and logic for defining searching-paths
* to load bundles from certain folders;
* This Dialog will be shown on Settings/Path Bundles
*/
class UCDialogPathBundles : public QDialog
{
	typedef QSharedPointer<Ui_SettingsPathBundles> Ui_SettingsPathBundles_sp;

	Q_OBJECT
public:
	UCDialogPathBundles();
	~UCDialogPathBundles(void);

public slots:
	/*! \brief     Slot creates a new QWidgetListItem and sets it as current selection */
	void								OnAddItem();

	/*! \brief     Slot Removes selected item from List*/
	void								OnRemoveItem();

	/*! \brief     Slot called to successfully exit this widget and write paths to UCManagerSettings-ini-file*/
	void								OnAccept();

	/*! \brief     Slot called if a widget item got double-clicked; Insertes a Widget with textbox and button
	 			   to open FileDialog-Box
		\param     item - that has been doubly clicked
	*/
	void								OnInsertWidget( QListWidgetItem* item );

	/*! \brief     Writes the string from widget-text box to QListWidgetItem and removes the widget
		\param     next - QListWidgetItem that has been selected
		\param     previous - QListWidgetItem that was selected previously
	*/
	void								OnRemoveWidget( QListWidgetItem* next, QListWidgetItem* previous );



private:

	/*! \brief     Setup all Connections with ::connect() */
	void								InitConnections();

	Ui_SettingsPathBundles_sp			m_UIWindow; 	/*!< QT-UIInstance of the settings window to insert search-paths for bundles; Generated by SettingsPathBundles.ui */
	QListWidget*						m_PathBundleEntries; 		/*!< Pointer to QT-Widget containing all paths to bundle directories */

};

typedef QSharedPointer<UCDialogPathBundles> UCDialogPathBundles_sp;
/*!
* Class representing the chosen path to bundle and offers button for FolderDialog
*/
class UCPathBundlesWidgetItem : public QWidget
{
	Q_OBJECT
public:
	UCPathBundlesWidgetItem( QListWidget* parent );

	/*! \brief     Fills the widgets text box with the corresponding path */
	void				SetPath( const QString& str );

	/*! \brief     Returns the given path inserted to this widget */
	const QString		GetPath() const;

private slots:

	/*! \brief     Slot that will show up popup to choose folder, will fill m_Text
				   with path to chosen folder */
	void				OnOpenFolder();



private:
	QLineEdit*			m_Text;	/*!< Containing inserted path */
	QToolButton*		m_OpenFolder;	/*!< Button openen ChooseFolder-Dialog */
	
};

}
